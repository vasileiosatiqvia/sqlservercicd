/*
Deployment script for cicd

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "cicd"
:setvar DefaultFilePrefix "cicd"
:setvar DefaultDataPath "C:\Users\u1109304\AppData\Local\Microsoft\VisualStudio\SSDT\cicd"
:setvar DefaultLogPath "C:\Users\u1109304\AppData\Local\Microsoft\VisualStudio\SSDT\cicd"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating Table [dbo].[CustomersFromSSISPackage]...';


GO
CREATE TABLE [dbo].[CustomersFromSSISPackage] (
    [CustomerKey]          VARCHAR (50) NULL,
    [GeographyKey]         VARCHAR (50) NULL,
    [CustomerAlternateKey] VARCHAR (50) NULL,
    [FirstName]            VARCHAR (50) NULL,
    [LastName]             VARCHAR (50) NULL,
    [NameStyle]            VARCHAR (50) NULL,
    [BirthDate]            VARCHAR (50) NULL,
    [MaritalStatus]        VARCHAR (50) NULL,
    [Gender]               VARCHAR (50) NULL,
    [EmailAddress]         VARCHAR (50) NULL,
    [YearlyIncome]         VARCHAR (50) NULL,
    [TotalChildren]        VARCHAR (50) NULL,
    [NumberChildrenAtHome] VARCHAR (50) NULL,
    [EnglishEducation]     VARCHAR (50) NULL,
    [SpanishEducation]     VARCHAR (50) NULL,
    [FrenchEducation]      VARCHAR (50) NULL,
    [EnglishOccupation]    VARCHAR (50) NULL,
    [SpanishOccupation]    VARCHAR (50) NULL,
    [FrenchOccupation]     VARCHAR (50) NULL,
    [HouseOwnerFlag]       VARCHAR (50) NULL,
    [NumberCarsOwned]      VARCHAR (50) NULL,
    [AddressLine1]         VARCHAR (50) NULL,
    [Phone]                VARCHAR (50) NULL,
    [DateFirstPurchase]    VARCHAR (50) NULL,
    [CommuteDistance]      VARCHAR (50) NULL
);


GO
PRINT N'Creating Table [dbo].[DimAccount]...';


GO
CREATE TABLE [dbo].[DimAccount] (
    [AccountKey]          INT            IDENTITY (1, 1) NOT NULL,
    [ParentAccountKey]    INT            NULL,
    [AccountLabel]        NVARCHAR (100) NULL,
    [AccountName]         NVARCHAR (50)  NULL,
    [AccountDescription]  NVARCHAR (50)  NULL,
    [AccountType]         NVARCHAR (50)  NULL,
    [Operator]            NVARCHAR (50)  NULL,
    [CustomMembers]       NVARCHAR (300) NULL,
    [ValueType]           NVARCHAR (50)  NULL,
    [CustomMemberOptions] NVARCHAR (200) NULL,
    [ETLLoadID]           INT            NULL,
    [LoadDate]            DATETIME       NULL,
    [UpdateDate]          DATETIME       NULL,
    CONSTRAINT [PK_DimAccount_AccountKey] PRIMARY KEY CLUSTERED ([AccountKey] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimChannel]...';


GO
CREATE TABLE [dbo].[DimChannel] (
    [ChannelKey]         INT            IDENTITY (1, 1) NOT NULL,
    [ChannelLabel]       NVARCHAR (100) NOT NULL,
    [ChannelName]        NVARCHAR (20)  NULL,
    [ChannelDescription] NVARCHAR (50)  NULL,
    [ETLLoadID]          INT            NULL,
    [LoadDate]           DATETIME       NULL,
    [UpdateDate]         DATETIME       NULL,
    CONSTRAINT [PK_DimChannel_ChannelKey] PRIMARY KEY CLUSTERED ([ChannelKey] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating Table [dbo].[DimCurrency]...';


GO
CREATE TABLE [dbo].[DimCurrency] (
    [CurrencyKey]         INT           IDENTITY (1, 1) NOT NULL,
    [CurrencyLabel]       NVARCHAR (10) NOT NULL,
    [CurrencyName]        NVARCHAR (20) NOT NULL,
    [CurrencyDescription] NVARCHAR (50) NOT NULL,
    [ETLLoadID]           INT           NULL,
    [LoadDate]            DATETIME      NULL,
    [UpdateDate]          DATETIME      NULL,
    CONSTRAINT [PK_DimCurrency_CurrencyKey] PRIMARY KEY CLUSTERED ([CurrencyKey] ASC),
    CONSTRAINT [AK_DimCurrency_CurrencyLabel] UNIQUE NONCLUSTERED ([CurrencyLabel] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimCustomer]...';


GO
CREATE TABLE [dbo].[DimCustomer] (
    [CustomerKey]          INT            IDENTITY (1, 1) NOT NULL,
    [GeographyKey]         INT            NOT NULL,
    [CustomerLabel]        NVARCHAR (100) NOT NULL,
    [Title]                NVARCHAR (8)   NULL,
    [FirstName]            NVARCHAR (50)  NULL,
    [MiddleName]           NVARCHAR (50)  NULL,
    [LastName]             NVARCHAR (50)  NULL,
    [NameStyle]            BIT            NULL,
    [BirthDate]            DATE           NULL,
    [MaritalStatus]        NCHAR (1)      NULL,
    [Suffix]               NVARCHAR (10)  NULL,
    [Gender]               NVARCHAR (1)   NULL,
    [EmailAddress]         NVARCHAR (50)  NULL,
    [YearlyIncome]         MONEY          NULL,
    [TotalChildren]        TINYINT        NULL,
    [NumberChildrenAtHome] TINYINT        NULL,
    [Education]            NVARCHAR (40)  NULL,
    [Occupation]           NVARCHAR (100) NULL,
    [HouseOwnerFlag]       NCHAR (1)      NULL,
    [NumberCarsOwned]      TINYINT        NULL,
    [AddressLine1]         NVARCHAR (120) NULL,
    [AddressLine2]         NVARCHAR (120) NULL,
    [Phone]                NVARCHAR (20)  NULL,
    [DateFirstPurchase]    DATE           NULL,
    [CustomerType]         NVARCHAR (15)  NULL,
    [CompanyName]          NVARCHAR (100) NULL,
    [ETLLoadID]            INT            NULL,
    [LoadDate]             DATETIME       NULL,
    [UpdateDate]           DATETIME       NULL,
    CONSTRAINT [PK_DimCustomer_CustomerKey] PRIMARY KEY CLUSTERED ([CustomerKey] ASC),
    CONSTRAINT [IX_DimCustomer_CustomerLabel] UNIQUE NONCLUSTERED ([CustomerLabel] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimDate]...';


GO
CREATE TABLE [dbo].[DimDate] (
    [Datekey]                DATETIME      NOT NULL,
    [FullDateLabel]          NVARCHAR (20) NOT NULL,
    [DateDescription]        NVARCHAR (20) NOT NULL,
    [CalendarYear]           INT           NOT NULL,
    [CalendarYearLabel]      NVARCHAR (20) NOT NULL,
    [CalendarHalfYear]       INT           NOT NULL,
    [CalendarHalfYearLabel]  NVARCHAR (20) NOT NULL,
    [CalendarQuarter]        INT           NOT NULL,
    [CalendarQuarterLabel]   NVARCHAR (20) NULL,
    [CalendarMonth]          INT           NOT NULL,
    [CalendarMonthLabel]     NVARCHAR (20) NOT NULL,
    [CalendarWeek]           INT           NOT NULL,
    [CalendarWeekLabel]      NVARCHAR (20) NOT NULL,
    [CalendarDayOfWeek]      INT           NOT NULL,
    [CalendarDayOfWeekLabel] NVARCHAR (10) NOT NULL,
    [FiscalYear]             INT           NOT NULL,
    [FiscalYearLabel]        NVARCHAR (20) NOT NULL,
    [FiscalHalfYear]         INT           NOT NULL,
    [FiscalHalfYearLabel]    NVARCHAR (20) NOT NULL,
    [FiscalQuarter]          INT           NOT NULL,
    [FiscalQuarterLabel]     NVARCHAR (20) NOT NULL,
    [FiscalMonth]            INT           NOT NULL,
    [FiscalMonthLabel]       NVARCHAR (20) NOT NULL,
    [IsWorkDay]              NVARCHAR (20) NOT NULL,
    [IsHoliday]              INT           NOT NULL,
    [HolidayName]            NVARCHAR (20) NOT NULL,
    [EuropeSeason]           NVARCHAR (50) NULL,
    [NorthAmericaSeason]     NVARCHAR (50) NULL,
    [AsiaSeason]             NVARCHAR (50) NULL,
    CONSTRAINT [PK_DimDate_DateKey] PRIMARY KEY CLUSTERED ([Datekey] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimEmployee]...';


GO
CREATE TABLE [dbo].[DimEmployee] (
    [EmployeeKey]           INT           IDENTITY (1, 1) NOT NULL,
    [ParentEmployeeKey]     INT           NULL,
    [FirstName]             NVARCHAR (50) NOT NULL,
    [LastName]              NVARCHAR (50) NOT NULL,
    [MiddleName]            NVARCHAR (50) NULL,
    [Title]                 NVARCHAR (50) NULL,
    [HireDate]              DATE          NULL,
    [BirthDate]             DATE          NULL,
    [EmailAddress]          NVARCHAR (50) NULL,
    [Phone]                 NVARCHAR (25) NULL,
    [MaritalStatus]         NCHAR (1)     NULL,
    [EmergencyContactName]  NVARCHAR (50) NULL,
    [EmergencyContactPhone] NVARCHAR (25) NULL,
    [SalariedFlag]          BIT           NULL,
    [Gender]                NCHAR (1)     NULL,
    [PayFrequency]          TINYINT       NULL,
    [BaseRate]              MONEY         NULL,
    [VacationHours]         SMALLINT      NULL,
    [CurrentFlag]           BIT           NOT NULL,
    [SalesPersonFlag]       BIT           NOT NULL,
    [DepartmentName]        NVARCHAR (50) NULL,
    [StartDate]             DATE          NULL,
    [EndDate]               DATE          NULL,
    [Status]                NVARCHAR (50) NULL,
    [ETLLoadID]             INT           NULL,
    [LoadDate]              DATETIME      NULL,
    [UpdateDate]            DATETIME      NULL,
    CONSTRAINT [PK_DimEmployee_EmployeeKey] PRIMARY KEY CLUSTERED ([EmployeeKey] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimEntity]...';


GO
CREATE TABLE [dbo].[DimEntity] (
    [EntityKey]         INT            IDENTITY (1, 1) NOT NULL,
    [EntityLabel]       NVARCHAR (100) NULL,
    [ParentEntityKey]   INT            NULL,
    [ParentEntityLabel] NVARCHAR (100) NULL,
    [EntityName]        NVARCHAR (50)  NULL,
    [EntityDescription] NVARCHAR (100) NULL,
    [EntityType]        NVARCHAR (100) NULL,
    [StartDate]         DATETIME       NULL,
    [EndDate]           DATETIME       NULL,
    [Status]            NVARCHAR (50)  NULL,
    [ETLLoadID]         INT            NULL,
    [LoadDate]          DATETIME       NULL,
    [UpdateDate]        DATETIME       NULL,
    CONSTRAINT [PK_DimEntity_EntityKey] PRIMARY KEY CLUSTERED ([EntityKey] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating Table [dbo].[DimGeography]...';


GO
CREATE TABLE [dbo].[DimGeography] (
    [GeographyKey]      INT              IDENTITY (1, 1) NOT NULL,
    [GeographyType]     NVARCHAR (50)    NOT NULL,
    [ContinentName]     NVARCHAR (50)    NOT NULL,
    [CityName]          NVARCHAR (100)   NULL,
    [StateProvinceName] NVARCHAR (100)   NULL,
    [RegionCountryName] NVARCHAR (100)   NULL,
    [Geometry]          [sys].[geometry] NULL,
    [ETLLoadID]         INT              NULL,
    [LoadDate]          DATETIME         NULL,
    [UpdateDate]        DATETIME         NULL,
    CONSTRAINT [PK_DimGeography_GeographyKey] PRIMARY KEY CLUSTERED ([GeographyKey] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimMachine]...';


GO
CREATE TABLE [dbo].[DimMachine] (
    [MachineKey]         INT            NOT NULL,
    [MachineLabel]       NVARCHAR (100) NULL,
    [StoreKey]           INT            NOT NULL,
    [MachineType]        NVARCHAR (50)  NOT NULL,
    [MachineName]        NVARCHAR (100) NOT NULL,
    [MachineDescription] NVARCHAR (200) NOT NULL,
    [VendorName]         NVARCHAR (50)  NOT NULL,
    [MachineOS]          NVARCHAR (50)  NOT NULL,
    [MachineSource]      NVARCHAR (100) NOT NULL,
    [MachineHardware]    NVARCHAR (100) NULL,
    [MachineSoftware]    NVARCHAR (100) NOT NULL,
    [Status]             NVARCHAR (50)  NOT NULL,
    [ServiceStartDate]   DATETIME       NOT NULL,
    [DecommissionDate]   DATETIME       NULL,
    [LastModifiedDate]   DATETIME       NULL,
    [ETLLoadID]          INT            NULL,
    [LoadDate]           DATETIME       NULL,
    [UpdateDate]         DATETIME       NULL,
    CONSTRAINT [PK_DimMachine_MachineKey] PRIMARY KEY CLUSTERED ([MachineKey] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimOutage]...';


GO
CREATE TABLE [dbo].[DimOutage] (
    [OutageKey]                INT            IDENTITY (1, 1) NOT NULL,
    [OutageLabel]              NVARCHAR (100) NOT NULL,
    [OutageName]               NVARCHAR (50)  NOT NULL,
    [OutageDescription]        NVARCHAR (200) NOT NULL,
    [OutageType]               NVARCHAR (50)  NOT NULL,
    [OutageTypeDescription]    NVARCHAR (200) NOT NULL,
    [OutageSubType]            NVARCHAR (50)  NOT NULL,
    [OutageSubTypeDescription] NVARCHAR (200) NOT NULL,
    [ETLLoadID]                INT            NULL,
    [LoadDate]                 DATETIME       NULL,
    [UpdateDate]               DATETIME       NULL,
    CONSTRAINT [PK_DimOutage_OutageKey] PRIMARY KEY CLUSTERED ([OutageKey] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimProduct]...';


GO
CREATE TABLE [dbo].[DimProduct] (
    [ProductKey]            INT            IDENTITY (1, 1) NOT NULL,
    [ProductLabel]          NVARCHAR (255) NULL,
    [ProductName]           NVARCHAR (500) NULL,
    [ProductDescription]    NVARCHAR (400) NULL,
    [ProductSubcategoryKey] INT            NULL,
    [Manufacturer]          NVARCHAR (50)  NULL,
    [BrandName]             NVARCHAR (50)  NULL,
    [ClassID]               NVARCHAR (10)  NULL,
    [ClassName]             NVARCHAR (20)  NULL,
    [StyleID]               NVARCHAR (10)  NULL,
    [StyleName]             NVARCHAR (20)  NULL,
    [ColorID]               NVARCHAR (10)  NULL,
    [ColorName]             NVARCHAR (20)  NOT NULL,
    [Size]                  NVARCHAR (50)  NULL,
    [SizeRange]             NVARCHAR (50)  NULL,
    [SizeUnitMeasureID]     NVARCHAR (20)  NULL,
    [Weight]                FLOAT (53)     NULL,
    [WeightUnitMeasureID]   NVARCHAR (20)  NULL,
    [UnitOfMeasureID]       NVARCHAR (10)  NULL,
    [UnitOfMeasureName]     NVARCHAR (40)  NULL,
    [StockTypeID]           NVARCHAR (10)  NULL,
    [StockTypeName]         NVARCHAR (40)  NULL,
    [UnitCost]              MONEY          NULL,
    [UnitPrice]             MONEY          NULL,
    [AvailableForSaleDate]  DATETIME       NULL,
    [StopSaleDate]          DATETIME       NULL,
    [Status]                NVARCHAR (7)   NULL,
    [ImageURL]              NVARCHAR (150) NULL,
    [ProductURL]            NVARCHAR (150) NULL,
    [ETLLoadID]             INT            NULL,
    [LoadDate]              DATETIME       NULL,
    [UpdateDate]            DATETIME       NULL,
    CONSTRAINT [PK_DimProduct_ProductKey] PRIMARY KEY CLUSTERED ([ProductKey] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating Table [dbo].[DimProductCategory]...';


GO
CREATE TABLE [dbo].[DimProductCategory] (
    [ProductCategoryKey]         INT            IDENTITY (1, 1) NOT NULL,
    [ProductCategoryLabel]       NVARCHAR (100) NULL,
    [ProductCategoryName]        NVARCHAR (30)  NOT NULL,
    [ProductCategoryDescription] NVARCHAR (50)  NOT NULL,
    [ETLLoadID]                  INT            NULL,
    [LoadDate]                   DATETIME       NULL,
    [UpdateDate]                 DATETIME       NULL,
    CONSTRAINT [PK_DimProductCategory_ProductCategoryKey] PRIMARY KEY CLUSTERED ([ProductCategoryKey] ASC),
    CONSTRAINT [AK_DimProductCategory_ProductCategoryLabel] UNIQUE NONCLUSTERED ([ProductCategoryLabel] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimProductSubcategory]...';


GO
CREATE TABLE [dbo].[DimProductSubcategory] (
    [ProductSubcategoryKey]         INT            IDENTITY (1, 1) NOT NULL,
    [ProductSubcategoryLabel]       NVARCHAR (100) NULL,
    [ProductSubcategoryName]        NVARCHAR (50)  NOT NULL,
    [ProductSubcategoryDescription] NVARCHAR (100) NULL,
    [ProductCategoryKey]            INT            NULL,
    [ETLLoadID]                     INT            NULL,
    [LoadDate]                      DATETIME       NULL,
    [UpdateDate]                    DATETIME       NULL,
    CONSTRAINT [PK_DimProductSubcategory_ProductSubcategoryKey] PRIMARY KEY CLUSTERED ([ProductSubcategoryKey] ASC),
    CONSTRAINT [AK_DimProductSubcategory_ProductSubcategoryLabel] UNIQUE NONCLUSTERED ([ProductSubcategoryLabel] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimPromotion]...';


GO
CREATE TABLE [dbo].[DimPromotion] (
    [PromotionKey]         INT            IDENTITY (1, 1) NOT NULL,
    [PromotionLabel]       NVARCHAR (100) NULL,
    [PromotionName]        NVARCHAR (100) NULL,
    [PromotionDescription] NVARCHAR (255) NULL,
    [DiscountPercent]      FLOAT (53)     NULL,
    [PromotionType]        NVARCHAR (50)  NULL,
    [PromotionCategory]    NVARCHAR (50)  NULL,
    [StartDate]            DATETIME       NOT NULL,
    [EndDate]              DATETIME       NULL,
    [MinQuantity]          INT            NULL,
    [MaxQuantity]          INT            NULL,
    [ETLLoadID]            INT            NULL,
    [LoadDate]             DATETIME       NULL,
    [UpdateDate]           DATETIME       NULL,
    CONSTRAINT [PK_DimPromotion_PromotionKey] PRIMARY KEY CLUSTERED ([PromotionKey] ASC),
    CONSTRAINT [AK_DimPromotion_PromotionLabel] UNIQUE NONCLUSTERED ([PromotionLabel] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimSalesTerritory]...';


GO
CREATE TABLE [dbo].[DimSalesTerritory] (
    [SalesTerritoryKey]     INT            IDENTITY (1, 1) NOT NULL,
    [GeographyKey]          INT            NOT NULL,
    [SalesTerritoryLabel]   NVARCHAR (100) NULL,
    [SalesTerritoryName]    NVARCHAR (50)  NOT NULL,
    [SalesTerritoryRegion]  NVARCHAR (50)  NOT NULL,
    [SalesTerritoryCountry] NVARCHAR (50)  NOT NULL,
    [SalesTerritoryGroup]   NVARCHAR (50)  NULL,
    [SalesTerritoryLevel]   NVARCHAR (10)  NULL,
    [SalesTerritoryManager] INT            NULL,
    [StartDate]             DATETIME       NULL,
    [EndDate]               DATETIME       NULL,
    [Status]                NVARCHAR (50)  NULL,
    [ETLLoadID]             INT            NULL,
    [LoadDate]              DATETIME       NULL,
    [UpdateDate]            DATETIME       NULL,
    CONSTRAINT [PK_DimSalesTerritory_SalesTerritoryKey] PRIMARY KEY CLUSTERED ([SalesTerritoryKey] ASC),
    CONSTRAINT [AK_DimSalesTerritory_SalesTerritoryLabel] UNIQUE NONCLUSTERED ([SalesTerritoryLabel] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimScenario]...';


GO
CREATE TABLE [dbo].[DimScenario] (
    [ScenarioKey]         INT            IDENTITY (1, 1) NOT NULL,
    [ScenarioLabel]       NVARCHAR (100) NOT NULL,
    [ScenarioName]        NVARCHAR (20)  NULL,
    [ScenarioDescription] NVARCHAR (50)  NULL,
    [ETLLoadID]           INT            NULL,
    [LoadDate]            DATETIME       NULL,
    [UpdateDate]          DATETIME       NULL,
    CONSTRAINT [PK_DimScenario] PRIMARY KEY CLUSTERED ([ScenarioKey] ASC)
);


GO
PRINT N'Creating Table [dbo].[DimStore]...';


GO
CREATE TABLE [dbo].[DimStore] (
    [StoreKey]         INT               IDENTITY (1, 1) NOT NULL,
    [GeographyKey]     INT               NOT NULL,
    [StoreManager]     INT               NULL,
    [StoreType]        NVARCHAR (15)     NULL,
    [StoreName]        NVARCHAR (100)    NOT NULL,
    [StoreDescription] NVARCHAR (300)    NOT NULL,
    [Status]           NVARCHAR (20)     NOT NULL,
    [OpenDate]         DATETIME          NOT NULL,
    [CloseDate]        DATETIME          NULL,
    [EntityKey]        INT               NULL,
    [ZipCode]          NVARCHAR (20)     NULL,
    [ZipCodeExtension] NVARCHAR (10)     NULL,
    [StorePhone]       NVARCHAR (15)     NULL,
    [StoreFax]         NVARCHAR (14)     NULL,
    [AddressLine1]     NVARCHAR (100)    NULL,
    [AddressLine2]     NVARCHAR (100)    NULL,
    [CloseReason]      NVARCHAR (20)     NULL,
    [EmployeeCount]    INT               NULL,
    [SellingAreaSize]  FLOAT (53)        NULL,
    [LastRemodelDate]  DATETIME          NULL,
    [GeoLocation]      [sys].[geography] NULL,
    [Geometry]         [sys].[geometry]  NULL,
    [ETLLoadID]        INT               NULL,
    [LoadDate]         DATETIME          NULL,
    [UpdateDate]       DATETIME          NULL,
    CONSTRAINT [PK_DimStore_StoreKey] PRIMARY KEY CLUSTERED ([StoreKey] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating Table [dbo].[FactExchangeRate]...';


GO
CREATE TABLE [dbo].[FactExchangeRate] (
    [ExchangeRateKey] INT        IDENTITY (1, 1) NOT NULL,
    [CurrencyKey]     INT        NOT NULL,
    [DateKey]         DATETIME   NOT NULL,
    [AverageRate]     FLOAT (53) NOT NULL,
    [EndOfDayRate]    FLOAT (53) NOT NULL,
    [ETLLoadID]       INT        NULL,
    [LoadDate]        DATETIME   NULL,
    [UpdateDate]      DATETIME   NULL,
    CONSTRAINT [PK_FactExchangeRate_ExchangeRateKey] PRIMARY KEY CLUSTERED ([ExchangeRateKey] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating Table [dbo].[FactInventory]...';


GO
CREATE TABLE [dbo].[FactInventory] (
    [InventoryKey]        INT      IDENTITY (1, 1) NOT NULL,
    [DateKey]             DATETIME NOT NULL,
    [StoreKey]            INT      NOT NULL,
    [ProductKey]          INT      NOT NULL,
    [CurrencyKey]         INT      NOT NULL,
    [OnHandQuantity]      INT      NOT NULL,
    [OnOrderQuantity]     INT      NOT NULL,
    [SafetyStockQuantity] INT      NULL,
    [UnitCost]            MONEY    NOT NULL,
    [DaysInStock]         INT      NULL,
    [MinDayInStock]       INT      NULL,
    [MaxDayInStock]       INT      NULL,
    [Aging]               INT      NULL,
    [ETLLoadID]           INT      NULL,
    [LoadDate]            DATETIME NULL,
    [UpdateDate]          DATETIME NULL,
    CONSTRAINT [PK_FactInventory_InventoryKey] PRIMARY KEY CLUSTERED ([InventoryKey] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating Table [dbo].[FactITMachine]...';


GO
CREATE TABLE [dbo].[FactITMachine] (
    [ITMachinekey] INT            IDENTITY (1, 1) NOT NULL,
    [MachineKey]   INT            NOT NULL,
    [Datekey]      DATETIME       NOT NULL,
    [CostAmount]   MONEY          NULL,
    [CostType]     NVARCHAR (200) NOT NULL,
    [ETLLoadID]    INT            NULL,
    [LoadDate]     DATETIME       NULL,
    [UpdateDate]   DATETIME       NULL,
    CONSTRAINT [PK_FactITMachine] PRIMARY KEY CLUSTERED ([ITMachinekey] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating Table [dbo].[FactITSLA]...';


GO
CREATE TABLE [dbo].[FactITSLA] (
    [ITSLAkey]        INT      IDENTITY (1, 1) NOT NULL,
    [DateKey]         DATETIME NOT NULL,
    [StoreKey]        INT      NOT NULL,
    [MachineKey]      INT      NOT NULL,
    [OutageKey]       INT      NOT NULL,
    [OutageStartTime] DATETIME NOT NULL,
    [OutageEndTime]   DATETIME NOT NULL,
    [DownTime]        INT      NOT NULL,
    [ETLLoadID]       INT      NULL,
    [LoadDate]        DATETIME NULL,
    [UpdateDate]      DATETIME NULL,
    CONSTRAINT [PK_FactITSLA_ITSLAKey] PRIMARY KEY CLUSTERED ([ITSLAkey] ASC)
);


GO
PRINT N'Creating Table [dbo].[FactOnlineSales]...';


GO
CREATE TABLE [dbo].[FactOnlineSales] (
    [OnlineSalesKey]       INT           IDENTITY (1, 1) NOT NULL,
    [DateKey]              DATETIME      NOT NULL,
    [StoreKey]             INT           NOT NULL,
    [ProductKey]           INT           NOT NULL,
    [PromotionKey]         INT           NOT NULL,
    [CurrencyKey]          INT           NOT NULL,
    [CustomerKey]          INT           NOT NULL,
    [SalesOrderNumber]     NVARCHAR (20) NOT NULL,
    [SalesOrderLineNumber] INT           NULL,
    [SalesQuantity]        INT           NOT NULL,
    [SalesAmount]          MONEY         NOT NULL,
    [ReturnQuantity]       INT           NOT NULL,
    [ReturnAmount]         MONEY         NULL,
    [DiscountQuantity]     INT           NULL,
    [DiscountAmount]       MONEY         NULL,
    [TotalCost]            MONEY         NOT NULL,
    [UnitCost]             MONEY         NULL,
    [UnitPrice]            MONEY         NULL,
    [ETLLoadID]            INT           NULL,
    [LoadDate]             DATETIME      NULL,
    [UpdateDate]           DATETIME      NULL,
    CONSTRAINT [PK_FactOnlineSales_SalesKey] PRIMARY KEY CLUSTERED ([OnlineSalesKey] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating Table [dbo].[FactSales]...';


GO
CREATE TABLE [dbo].[FactSales] (
    [SalesKey]         INT      IDENTITY (1, 1) NOT NULL,
    [DateKey]          DATETIME NOT NULL,
    [channelKey]       INT      NOT NULL,
    [StoreKey]         INT      NOT NULL,
    [ProductKey]       INT      NOT NULL,
    [PromotionKey]     INT      NOT NULL,
    [CurrencyKey]      INT      NOT NULL,
    [UnitCost]         MONEY    NOT NULL,
    [UnitPrice]        MONEY    NOT NULL,
    [SalesQuantity]    INT      NOT NULL,
    [ReturnQuantity]   INT      NOT NULL,
    [ReturnAmount]     MONEY    NULL,
    [DiscountQuantity] INT      NULL,
    [DiscountAmount]   MONEY    NULL,
    [TotalCost]        MONEY    NOT NULL,
    [SalesAmount]      MONEY    NOT NULL,
    [ETLLoadID]        INT      NULL,
    [LoadDate]         DATETIME NULL,
    [UpdateDate]       DATETIME NULL,
    CONSTRAINT [PK_FactSales_SalesKey] PRIMARY KEY CLUSTERED ([SalesKey] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating Table [dbo].[FactSalesQuota]...';


GO
CREATE TABLE [dbo].[FactSalesQuota] (
    [SalesQuotaKey]      INT      IDENTITY (1, 1) NOT NULL,
    [ChannelKey]         INT      NOT NULL,
    [StoreKey]           INT      NOT NULL,
    [ProductKey]         INT      NOT NULL,
    [DateKey]            DATETIME NOT NULL,
    [CurrencyKey]        INT      NOT NULL,
    [ScenarioKey]        INT      NOT NULL,
    [SalesQuantityQuota] MONEY    NOT NULL,
    [SalesAmountQuota]   MONEY    NOT NULL,
    [GrossMarginQuota]   MONEY    NOT NULL,
    [ETLLoadID]          INT      NULL,
    [LoadDate]           DATETIME NULL,
    [UpdateDate]         DATETIME NULL,
    CONSTRAINT [PK_FactSalesQuota_SalesQuotaKey] PRIMARY KEY CLUSTERED ([SalesQuotaKey] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating Table [dbo].[FactStrategyPlan]...';


GO
CREATE TABLE [dbo].[FactStrategyPlan] (
    [StrategyPlanKey]    INT      IDENTITY (1, 1) NOT NULL,
    [Datekey]            DATETIME NOT NULL,
    [EntityKey]          INT      NOT NULL,
    [ScenarioKey]        INT      NOT NULL,
    [AccountKey]         INT      NOT NULL,
    [CurrencyKey]        INT      NOT NULL,
    [ProductCategoryKey] INT      NULL,
    [Amount]             MONEY    NOT NULL,
    [ETLLoadID]          INT      NULL,
    [LoadDate]           DATETIME NULL,
    [UpdateDate]         DATETIME NULL,
    CONSTRAINT [PK_FactStrategyPlan_StrategyPlanKey] PRIMARY KEY CLUSTERED ([StrategyPlanKey] ASC) WITH (DATA_COMPRESSION = PAGE)
);


GO
PRINT N'Creating Table [dbo].[OLE DB Destination]...';


GO
CREATE TABLE [dbo].[OLE DB Destination] (
    [CustomerKey]          VARCHAR (50) NULL,
    [GeographyKey]         VARCHAR (50) NULL,
    [CustomerAlternateKey] VARCHAR (50) NULL,
    [FirstName]            VARCHAR (50) NULL,
    [LastName]             VARCHAR (50) NULL,
    [NameStyle]            VARCHAR (50) NULL,
    [BirthDate]            VARCHAR (50) NULL,
    [MaritalStatus]        VARCHAR (50) NULL,
    [Gender]               VARCHAR (50) NULL,
    [EmailAddress]         VARCHAR (50) NULL,
    [YearlyIncome]         VARCHAR (50) NULL,
    [TotalChildren]        VARCHAR (50) NULL,
    [NumberChildrenAtHome] VARCHAR (50) NULL,
    [EnglishEducation]     VARCHAR (50) NULL,
    [SpanishEducation]     VARCHAR (50) NULL,
    [FrenchEducation]      VARCHAR (50) NULL,
    [EnglishOccupation]    VARCHAR (50) NULL,
    [SpanishOccupation]    VARCHAR (50) NULL,
    [FrenchOccupation]     VARCHAR (50) NULL,
    [HouseOwnerFlag]       VARCHAR (50) NULL,
    [NumberCarsOwned]      VARCHAR (50) NULL,
    [AddressLine1]         VARCHAR (50) NULL,
    [Phone]                VARCHAR (50) NULL,
    [DateFirstPurchase]    VARCHAR (50) NULL,
    [CommuteDistance]      VARCHAR (50) NULL
);


GO
PRINT N'Creating Default Constraint [dbo].[DF_DimEntity_Status]...';


GO
ALTER TABLE [dbo].[DimEntity]
    ADD CONSTRAINT [DF_DimEntity_Status] DEFAULT (N'Current') FOR [Status];


GO
PRINT N'Creating Foreign Key [dbo].[FK_DimCustomer_DimGeography]...';


GO
ALTER TABLE [dbo].[DimCustomer] WITH NOCHECK
    ADD CONSTRAINT [FK_DimCustomer_DimGeography] FOREIGN KEY ([GeographyKey]) REFERENCES [dbo].[DimGeography] ([GeographyKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_DimEmployee_DimEmployee]...';


GO
ALTER TABLE [dbo].[DimEmployee] WITH NOCHECK
    ADD CONSTRAINT [FK_DimEmployee_DimEmployee] FOREIGN KEY ([ParentEmployeeKey]) REFERENCES [dbo].[DimEmployee] ([EmployeeKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_DimMachine_DimStore]...';


GO
ALTER TABLE [dbo].[DimMachine] WITH NOCHECK
    ADD CONSTRAINT [FK_DimMachine_DimStore] FOREIGN KEY ([StoreKey]) REFERENCES [dbo].[DimStore] ([StoreKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_DimProduct_DimProductSubcategory]...';


GO
ALTER TABLE [dbo].[DimProduct] WITH NOCHECK
    ADD CONSTRAINT [FK_DimProduct_DimProductSubcategory] FOREIGN KEY ([ProductSubcategoryKey]) REFERENCES [dbo].[DimProductSubcategory] ([ProductSubcategoryKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_DimProductSubcategory_DimProductCategory]...';


GO
ALTER TABLE [dbo].[DimProductSubcategory] WITH NOCHECK
    ADD CONSTRAINT [FK_DimProductSubcategory_DimProductCategory] FOREIGN KEY ([ProductCategoryKey]) REFERENCES [dbo].[DimProductCategory] ([ProductCategoryKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_DimSalesTerritory_DimGeography]...';


GO
ALTER TABLE [dbo].[DimSalesTerritory] WITH NOCHECK
    ADD CONSTRAINT [FK_DimSalesTerritory_DimGeography] FOREIGN KEY ([GeographyKey]) REFERENCES [dbo].[DimGeography] ([GeographyKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_DimStore_DimGeography]...';


GO
ALTER TABLE [dbo].[DimStore] WITH NOCHECK
    ADD CONSTRAINT [FK_DimStore_DimGeography] FOREIGN KEY ([GeographyKey]) REFERENCES [dbo].[DimGeography] ([GeographyKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactExchangeRate_DimCurrency]...';


GO
ALTER TABLE [dbo].[FactExchangeRate] WITH NOCHECK
    ADD CONSTRAINT [FK_FactExchangeRate_DimCurrency] FOREIGN KEY ([CurrencyKey]) REFERENCES [dbo].[DimCurrency] ([CurrencyKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactExchangeRate_DimDate]...';


GO
ALTER TABLE [dbo].[FactExchangeRate] WITH NOCHECK
    ADD CONSTRAINT [FK_FactExchangeRate_DimDate] FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDate] ([Datekey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactInventory_DimCurrency]...';


GO
ALTER TABLE [dbo].[FactInventory] WITH NOCHECK
    ADD CONSTRAINT [FK_FactInventory_DimCurrency] FOREIGN KEY ([CurrencyKey]) REFERENCES [dbo].[DimCurrency] ([CurrencyKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactInventory_DimDate]...';


GO
ALTER TABLE [dbo].[FactInventory] WITH NOCHECK
    ADD CONSTRAINT [FK_FactInventory_DimDate] FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDate] ([Datekey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactInventory_DimProduct]...';


GO
ALTER TABLE [dbo].[FactInventory] WITH NOCHECK
    ADD CONSTRAINT [FK_FactInventory_DimProduct] FOREIGN KEY ([ProductKey]) REFERENCES [dbo].[DimProduct] ([ProductKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactInventory_DimStore]...';


GO
ALTER TABLE [dbo].[FactInventory] WITH NOCHECK
    ADD CONSTRAINT [FK_FactInventory_DimStore] FOREIGN KEY ([StoreKey]) REFERENCES [dbo].[DimStore] ([StoreKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactITMachine_DimDate]...';


GO
ALTER TABLE [dbo].[FactITMachine] WITH NOCHECK
    ADD CONSTRAINT [FK_FactITMachine_DimDate] FOREIGN KEY ([Datekey]) REFERENCES [dbo].[DimDate] ([Datekey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactITMachine_DimMachine]...';


GO
ALTER TABLE [dbo].[FactITMachine] WITH NOCHECK
    ADD CONSTRAINT [FK_FactITMachine_DimMachine] FOREIGN KEY ([MachineKey]) REFERENCES [dbo].[DimMachine] ([MachineKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactITSLA_DimDate]...';


GO
ALTER TABLE [dbo].[FactITSLA] WITH NOCHECK
    ADD CONSTRAINT [FK_FactITSLA_DimDate] FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDate] ([Datekey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactITSLA_DimMachine]...';


GO
ALTER TABLE [dbo].[FactITSLA] WITH NOCHECK
    ADD CONSTRAINT [FK_FactITSLA_DimMachine] FOREIGN KEY ([MachineKey]) REFERENCES [dbo].[DimMachine] ([MachineKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactITSLA_DimOutage]...';


GO
ALTER TABLE [dbo].[FactITSLA] WITH NOCHECK
    ADD CONSTRAINT [FK_FactITSLA_DimOutage] FOREIGN KEY ([OutageKey]) REFERENCES [dbo].[DimOutage] ([OutageKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactITSLA_DimStore]...';


GO
ALTER TABLE [dbo].[FactITSLA] WITH NOCHECK
    ADD CONSTRAINT [FK_FactITSLA_DimStore] FOREIGN KEY ([StoreKey]) REFERENCES [dbo].[DimStore] ([StoreKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactOnlineSales_DimCurrency]...';


GO
ALTER TABLE [dbo].[FactOnlineSales] WITH NOCHECK
    ADD CONSTRAINT [FK_FactOnlineSales_DimCurrency] FOREIGN KEY ([CurrencyKey]) REFERENCES [dbo].[DimCurrency] ([CurrencyKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactOnlineSales_DimCustomer]...';


GO
ALTER TABLE [dbo].[FactOnlineSales] WITH NOCHECK
    ADD CONSTRAINT [FK_FactOnlineSales_DimCustomer] FOREIGN KEY ([CustomerKey]) REFERENCES [dbo].[DimCustomer] ([CustomerKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactOnlineSales_DimDate]...';


GO
ALTER TABLE [dbo].[FactOnlineSales] WITH NOCHECK
    ADD CONSTRAINT [FK_FactOnlineSales_DimDate] FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDate] ([Datekey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactOnlineSales_DimProduct]...';


GO
ALTER TABLE [dbo].[FactOnlineSales] WITH NOCHECK
    ADD CONSTRAINT [FK_FactOnlineSales_DimProduct] FOREIGN KEY ([ProductKey]) REFERENCES [dbo].[DimProduct] ([ProductKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactOnlineSales_DimPromotion]...';


GO
ALTER TABLE [dbo].[FactOnlineSales] WITH NOCHECK
    ADD CONSTRAINT [FK_FactOnlineSales_DimPromotion] FOREIGN KEY ([PromotionKey]) REFERENCES [dbo].[DimPromotion] ([PromotionKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactOnlineSales_DimStore]...';


GO
ALTER TABLE [dbo].[FactOnlineSales] WITH NOCHECK
    ADD CONSTRAINT [FK_FactOnlineSales_DimStore] FOREIGN KEY ([StoreKey]) REFERENCES [dbo].[DimStore] ([StoreKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactSales_DimChannel]...';


GO
ALTER TABLE [dbo].[FactSales] WITH NOCHECK
    ADD CONSTRAINT [FK_FactSales_DimChannel] FOREIGN KEY ([channelKey]) REFERENCES [dbo].[DimChannel] ([ChannelKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactSales_DimCurrency]...';


GO
ALTER TABLE [dbo].[FactSales] WITH NOCHECK
    ADD CONSTRAINT [FK_FactSales_DimCurrency] FOREIGN KEY ([CurrencyKey]) REFERENCES [dbo].[DimCurrency] ([CurrencyKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactSales_DimDate]...';


GO
ALTER TABLE [dbo].[FactSales] WITH NOCHECK
    ADD CONSTRAINT [FK_FactSales_DimDate] FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDate] ([Datekey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactSales_DimProduct]...';


GO
ALTER TABLE [dbo].[FactSales] WITH NOCHECK
    ADD CONSTRAINT [FK_FactSales_DimProduct] FOREIGN KEY ([ProductKey]) REFERENCES [dbo].[DimProduct] ([ProductKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactSales_DimPromotion]...';


GO
ALTER TABLE [dbo].[FactSales] WITH NOCHECK
    ADD CONSTRAINT [FK_FactSales_DimPromotion] FOREIGN KEY ([PromotionKey]) REFERENCES [dbo].[DimPromotion] ([PromotionKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactSales_DimStore]...';


GO
ALTER TABLE [dbo].[FactSales] WITH NOCHECK
    ADD CONSTRAINT [FK_FactSales_DimStore] FOREIGN KEY ([StoreKey]) REFERENCES [dbo].[DimStore] ([StoreKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactSalesQuota_DimChannel]...';


GO
ALTER TABLE [dbo].[FactSalesQuota] WITH NOCHECK
    ADD CONSTRAINT [FK_FactSalesQuota_DimChannel] FOREIGN KEY ([ChannelKey]) REFERENCES [dbo].[DimChannel] ([ChannelKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactSalesQuota_DimCurrency]...';


GO
ALTER TABLE [dbo].[FactSalesQuota] WITH NOCHECK
    ADD CONSTRAINT [FK_FactSalesQuota_DimCurrency] FOREIGN KEY ([CurrencyKey]) REFERENCES [dbo].[DimCurrency] ([CurrencyKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactSalesQuota_DimDate]...';


GO
ALTER TABLE [dbo].[FactSalesQuota] WITH NOCHECK
    ADD CONSTRAINT [FK_FactSalesQuota_DimDate] FOREIGN KEY ([DateKey]) REFERENCES [dbo].[DimDate] ([Datekey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactSalesQuota_DimProduct]...';


GO
ALTER TABLE [dbo].[FactSalesQuota] WITH NOCHECK
    ADD CONSTRAINT [FK_FactSalesQuota_DimProduct] FOREIGN KEY ([ProductKey]) REFERENCES [dbo].[DimProduct] ([ProductKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactSalesQuota_DimScenario]...';


GO
ALTER TABLE [dbo].[FactSalesQuota] WITH NOCHECK
    ADD CONSTRAINT [FK_FactSalesQuota_DimScenario] FOREIGN KEY ([ScenarioKey]) REFERENCES [dbo].[DimScenario] ([ScenarioKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactSalesQuota_DimStore]...';


GO
ALTER TABLE [dbo].[FactSalesQuota] WITH NOCHECK
    ADD CONSTRAINT [FK_FactSalesQuota_DimStore] FOREIGN KEY ([StoreKey]) REFERENCES [dbo].[DimStore] ([StoreKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactStrategyPlan_DimAccount]...';


GO
ALTER TABLE [dbo].[FactStrategyPlan] WITH NOCHECK
    ADD CONSTRAINT [FK_FactStrategyPlan_DimAccount] FOREIGN KEY ([AccountKey]) REFERENCES [dbo].[DimAccount] ([AccountKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactStrategyPlan_DimCurrency]...';


GO
ALTER TABLE [dbo].[FactStrategyPlan] WITH NOCHECK
    ADD CONSTRAINT [FK_FactStrategyPlan_DimCurrency] FOREIGN KEY ([CurrencyKey]) REFERENCES [dbo].[DimCurrency] ([CurrencyKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactStrategyPlan_DimDate]...';


GO
ALTER TABLE [dbo].[FactStrategyPlan] WITH NOCHECK
    ADD CONSTRAINT [FK_FactStrategyPlan_DimDate] FOREIGN KEY ([Datekey]) REFERENCES [dbo].[DimDate] ([Datekey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactStrategyPlan_DimEntity]...';


GO
ALTER TABLE [dbo].[FactStrategyPlan] WITH NOCHECK
    ADD CONSTRAINT [FK_FactStrategyPlan_DimEntity] FOREIGN KEY ([EntityKey]) REFERENCES [dbo].[DimEntity] ([EntityKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactStrategyPlan_DimProductCategory]...';


GO
ALTER TABLE [dbo].[FactStrategyPlan] WITH NOCHECK
    ADD CONSTRAINT [FK_FactStrategyPlan_DimProductCategory] FOREIGN KEY ([ProductCategoryKey]) REFERENCES [dbo].[DimProductCategory] ([ProductCategoryKey]);


GO
PRINT N'Creating Foreign Key [dbo].[FK_FactStrategyPlan_DimScenario]...';


GO
ALTER TABLE [dbo].[FactStrategyPlan] WITH NOCHECK
    ADD CONSTRAINT [FK_FactStrategyPlan_DimScenario] FOREIGN KEY ([ScenarioKey]) REFERENCES [dbo].[DimScenario] ([ScenarioKey]);


GO
PRINT N'Creating View [dbo].[V_Customer]...';


GO
CREATE VIEW dbo.V_Customer
AS
SELECT     C.CustomerKey, DATEDIFF(year, C.BirthDate, GETDATE()) AS Age, C.MaritalStatus, C.Gender, C.YearlyIncome, C.TotalChildren, C.NumberChildrenAtHome, C.Education, 
                      C.HouseOwnerFlag, C.NumberCarsOwned, S.Consumption
FROM         dbo.DimCustomer AS C INNER JOIN
                          (SELECT     CustomerKey, SUM(SalesAmount) AS Consumption
                            FROM          dbo.FactOnlineSales
                            GROUP BY CustomerKey) AS S ON C.CustomerKey = S.CustomerKey
WHERE     (C.CustomerType = 'Person')
GO
PRINT N'Creating View [dbo].[V_CustomerOrders]...';


GO
CREATE VIEW [dbo].[V_CustomerOrders]
AS
    SELECT
        pc.[ProductCategoryName]
        ,psc.ProductSubcategoryName AS ProductSubcategory
        ,p.ProductName AS Product
        ,c.[CustomerKey]
        ,g.RegionCountryName AS [Region]
        ,CASE
            WHEN Month(GetDate()) < Month(c.[BirthDate])
                THEN DateDiff(yy,c.[BirthDate],GetDate()) - 1
            WHEN Month(GetDate()) = Month(c.[BirthDate])
            AND Day(GetDate()) < Day(c.[BirthDate])
                THEN DateDiff(yy,c.[BirthDate],GetDate()) - 1
            ELSE DateDiff(yy,c.[BirthDate],GetDate())
        END AS [Age]
        ,CASE
            WHEN c.[YearlyIncome] < 40000 THEN 'Low'
            WHEN c.[YearlyIncome] > 100000 THEN 'High'
            ELSE 'Moderate'
        END AS [IncomeGroup]
        ,d.[CalendarYear]
        ,d.[FiscalYear]
        ,d.[CalendarMonth] AS [Month]
        ,f.[SalesOrderNumber] AS [OrderNumber]
        ,f.SalesOrderLineNumber AS LineNumber
        ,f.SalesQuantity AS Quantity
        ,f.SalesAmount AS Amount  
    FROM
        [dbo].[FactOnlineSales] f
    INNER JOIN [dbo].[DimDate] d
        ON f.[DateKey] = d.[DateKey]
    INNER JOIN [dbo].[DimProduct] p
        ON f.[ProductKey] = p.[ProductKey]
    INNER JOIN [dbo].[DimProductSubcategory] psc
        ON p.[ProductSubcategoryKey] = psc.[ProductSubcategoryKey]
    INNER JOIN [dbo].[DimProductCategory] pc
        ON psc.[ProductCategoryKey] = pc.[ProductCategoryKey]
    INNER JOIN [dbo].[DimCustomer] c
        ON f.[CustomerKey] = c.[CustomerKey]
    INNER JOIN [dbo].[DimGeography] g
        ON c.[GeographyKey] = g.[GeographyKey]
   
;
GO
PRINT N'Creating View [dbo].[V_CustomerPromotion]...';


GO
CREATE VIEW dbo.V_CustomerPromotion
AS
SELECT     dbo.DimCustomer.CustomerKey, DATEDIFF(year, dbo.DimCustomer.BirthDate, GETDATE()) AS Age, dbo.DimCustomer.MaritalStatus, dbo.DimCustomer.Gender, 
                      dbo.DimCustomer.YearlyIncome, dbo.DimCustomer.TotalChildren, dbo.DimCustomer.NumberChildrenAtHome, dbo.DimCustomer.Education, 
                      dbo.DimCustomer.HouseOwnerFlag, dbo.DimCustomer.NumberCarsOwned, dbo.DimPromotion.PromotionName, dbo.DimPromotion.PromotionType, 
                      dbo.FactOnlineSales.ProductKey, dbo.FactOnlineSales.PromotionKey
FROM         dbo.DimCustomer INNER JOIN
                      dbo.FactOnlineSales ON dbo.DimCustomer.CustomerKey = dbo.FactOnlineSales.CustomerKey INNER JOIN
                      dbo.DimPromotion ON dbo.FactOnlineSales.PromotionKey = dbo.DimPromotion.PromotionKey
WHERE     (dbo.DimCustomer.CustomerType = 'Person') AND (dbo.FactOnlineSales.ProductKey >= 1144) AND (dbo.FactOnlineSales.ProductKey <= 1246)
GO
PRINT N'Creating View [dbo].[V_OnlineSalesOrder]...';


GO
CREATE VIEW dbo.V_OnlineSalesOrder
AS
SELECT DISTINCT OrderNumber, CustomerKey, Region, IncomeGroup
FROM         dbo.V_CustomerOrders
WHERE     (CalendarYear = 2007)
GO
PRINT N'Creating View [dbo].[V_OnlineSalesOrderDetail]...';


GO
CREATE VIEW dbo.V_OnlineSalesOrderDetail
AS
SELECT     OrderNumber, LineNumber, Product
FROM         dbo.V_CustomerOrders
WHERE     (CalendarYear = 2007)
GO
PRINT N'Creating View [dbo].[V_ProductForecast]...';


GO
CREATE VIEW dbo.V_ProductForecast
AS
SELECT     D.CalendarMonth, CONVERT(datetime, CONVERT(varchar(6), D.CalendarMonth) + '01', 120) AS ReportDate, C.ProductCategoryName, SUM(S.SalesQuantity) 
                      AS SalesQuantity, SUM(S.SalesAmount) AS SalesAmount
FROM         dbo.FactOnlineSales AS S INNER JOIN
                      dbo.DimProduct AS P ON S.ProductKey = P.ProductKey INNER JOIN
                      dbo.DimProductSubcategory AS SC ON P.ProductSubcategoryKey = SC.ProductSubcategoryKey INNER JOIN
                      dbo.DimProductCategory AS C ON SC.ProductCategoryKey = C.ProductCategoryKey INNER JOIN
                      dbo.DimDate AS D ON S.DateKey = D.Datekey
GROUP BY D.CalendarMonth, C.ProductCategoryName
GO
PRINT N'Creating Procedure [dbo].[P_FactSalesQuota]...';


GO

--EXEC P_FactSalesQuota 0.25,0.45,0.35,0.25,0.35,0.3,0.2,0.25,0.2,0.15,0.05,0.05,0.2,0.05,0.05,0.1,0.05,0.05

CREATE PROC [dbo].[P_FactSalesQuota]
(
	@NAmerican2007 float,-----The forecast parameter
	@NAmerican2008 float,
	@NAmerican2009 float,
	@Europe2007 float,
	@Europe2008 float,
	@Europe2009 float,
	@Asia2007 float,
	@Asia2008 float,
	@Asia2009 float,
	@NAmerican2007Budget float,
	@NAmerican2008Budget float,
	@NAmerican2009Budget float,
	@Europe2007Budget float,
	@Europe2008Budget float,
	@Europe2009Budget float,
	@Asia2007Budget float,
	@Asia2008Budget float,
	@Asia2009Budget float	
)
AS
BEGIN
---Generate Basic Data
INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
 
SELECT      S.channelKey,S.StoreKey,S.ProductKey,
            DATEADD(d,-DAY(S.DateKey)+1,S.DateKey) AS DateKey,
            S.CurrencyKey,1 AS ScenarioKey,--Actual
            SUM(S.SalesQuantity) AS SalesQuantityQuota,
            SUM(S.SalesAmount) AS SalesAmount,
            SUM(S.SalesAmount)-SUM(S.ReturnAmount)-SUM(S.TotalCost) AS GrossMarginQuota,
            1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM		FactSales S
GROUP BY    S.StoreKey,DATEADD(d,-DAY(S.DateKey)+1,S.DateKey),
			S.channelKey,S.ProductKey,S.CurrencyKey

                  
---Update the Basic Data
---NAmerican
INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 3 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@NAmerican2007 + 0.9)) ,
            s.SalesAmountQuota * (RAND()*@NAmerican2007 + 0.9) , 
            s.GrossMarginQuota * (RAND()*@NAmerican2007 + 0.9) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE	s.ScenarioKey = 1 and s.DateKey>='20070101' and s.DateKey<='20080630' 
		and SubString(e.EntityLabel,1,2) = '01'

INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 3 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@NAmerican2008 + 1)) ,
            s.SalesAmountQuota * (RAND()*@NAmerican2008 + 1) , 
            s.GrossMarginQuota * (RAND()*@NAmerican2008 + 1) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20080701' and s.DateKey<='20081231' and SubString(e.EntityLabel,1,2) = '01'


INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 3 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@NAmerican2009 + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@NAmerican2009 + 0.8) , 
            s.GrossMarginQuota * (RAND()*@NAmerican2009 + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20090101' and s.DateKey<='20091231' and SubString(e.EntityLabel,1,2) = '01'

---Europe
INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 3 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@Europe2007 + 0.9)) ,
            s.SalesAmountQuota * (RAND()*@Europe2007 + 0.9) , 
            s.GrossMarginQuota * (RAND()*@Europe2007 + 0.9) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20070101' and s.DateKey<='20080630' and SubString(e.EntityLabel,1,2) = '02'

INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 3 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@Europe2008 + 1)) ,
            s.SalesAmountQuota * (RAND()*@Europe2008 + 1) , 
            s.GrossMarginQuota * (RAND()*@Europe2008 + 1) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20080701' and s.DateKey<='20081231' and SubString(e.EntityLabel,1,2) = '02'

INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 3 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@Europe2009 + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@Europe2009 + 0.8) , 
            s.GrossMarginQuota * (RAND()*@Europe2009 + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20090101' and s.DateKey<='20091231' and SubString(e.EntityLabel,1,2) = '02'

---Asia
INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 3 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@Asia2007 + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@Asia2007 + 0.8) , 
            s.GrossMarginQuota * (RAND()*@Asia2007 + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20070101' and s.DateKey<='20080630' and SubString(e.EntityLabel,1,2) = '03'

INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 3 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@Asia2008 + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@Asia2008 + 0.9) , 
            s.GrossMarginQuota * (RAND()*@Asia2008 + 0.9) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20080701' and s.DateKey<='20081231' and SubString(e.EntityLabel,1,2) = '03'

INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 3 AS ScenarioKey, 
           Convert(int, s.SalesQuantityQuota * (RAND()*@Asia2009 + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@Asia2009 + 0.8) , 
            s.GrossMarginQuota * (RAND()*@Asia2009 + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20090101' and s.DateKey<='20091231' and SubString(e.EntityLabel,1,2) = '03'


---NAmerican budget data
INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 2 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@NAmerican2007Budget + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@NAmerican2007Budget + 0.8) , 
            s.GrossMarginQuota * (RAND()*@NAmerican2007Budget + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20070101' and s.DateKey<='20080630' and SubString(e.EntityLabel,1,2) = '01'

INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 2 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@NAmerican2008Budget + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@NAmerican2008Budget + 0.8) , 
            s.GrossMarginQuota * (RAND()*@NAmerican2008Budget + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20080701' and s.DateKey<='20081231' and SubString(e.EntityLabel,1,2) = '01'


INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 2 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@NAmerican2009Budget + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@NAmerican2009Budget + 0.8) , 
            s.GrossMarginQuota * (RAND()*@NAmerican2009Budget + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20090101' and s.DateKey<='20091231' and SubString(e.EntityLabel,1,2) = '01'

---Europe budget data
INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 2 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@Europe2007Budget + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@Europe2007Budget + 0.8) , 
            s.GrossMarginQuota * (RAND()*@Europe2007Budget + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20070101' and s.DateKey<='20080630' and SubString(e.EntityLabel,1,2) = '02'

INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 2 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@Europe2008Budget + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@Europe2008Budget + 0.8) , 
            s.GrossMarginQuota * (RAND()*@Europe2008Budget + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20080701' and s.DateKey<='20081231' and SubString(e.EntityLabel,1,2) = '02'

INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 2 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@Europe2009Budget + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@Europe2009Budget + 0.8) , 
            s.GrossMarginQuota * (RAND()*@Europe2009Budget + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20090101' and s.DateKey<='20091231' and SubString(e.EntityLabel,1,2) = '02'

---Asia budget
INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 2 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@Asia2007Budget + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@Asia2007Budget + 0.8) , 
            s.GrossMarginQuota * (RAND()*@Asia2007Budget + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20070101' and s.DateKey<='20080630' and SubString(e.EntityLabel,1,2) = '03'

INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 2 AS ScenarioKey, 
            Convert(int,s.SalesQuantityQuota * (RAND()*@Asia2008Budget + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@Asia2008Budget + 0.8) , 
            s.GrossMarginQuota * (RAND()*@Asia2008Budget + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20080701' and s.DateKey<='20081231' and SubString(e.EntityLabel,1,2) = '03'

INSERT      FactSalesQuota(
            ChannelKey,StoreKey,ProductKey, 
            DateKey, CurrencyKey, ScenarioKey, 
            SalesQuantityQuota,SalesAmountQuota, GrossMarginQuota, 
            ETLLoadID, LoadDate, UpdateDate)
SELECT      s.ChannelKey,s.StoreKey, s.ProductKey, 
            s.DateKey, s.CurrencyKey, 2 AS ScenarioKey, 
           Convert(int, s.SalesQuantityQuota * (RAND()*@Asia2009Budget + 0.8)) ,
            s.SalesAmountQuota * (RAND()*@Asia2009Budget + 0.8) , 
            s.GrossMarginQuota * (RAND()*@Asia2009Budget + 0.8) , 
            s.ETLLoadID, s.LoadDate, s.UpdateDate
FROM  FactSalesQuota s left join DimStore d
on s.StoreKey = d.StoreKey left join DimEntity e
on d.EntityKey = e.EntityKey
WHERE s.ScenarioKey = 1 and s.DateKey>='20090101' and s.DateKey<='20091231' and SubString(e.EntityLabel,1,2) = '03'

--End
End
GO
PRINT N'Creating Procedure [dbo].[P_FactStrategyPlan]...';


GO



CREATE PROC [dbo].[P_FactStrategyPlan]
(
	@AdminCost float,----The percentage of the account
	@ITCost float,
	@HRCost float,
	@EnergyCost float,
	@FixedCost float,
	@VariableCost float,
	@AdCost float,
	@SpringAdCost float,
	@BackSchool float,
	@HolidayAdCost float,
	@CostofGoodsSold float,
	@SellCost float
)
AS
Begin
---Basic Data
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 2 as ScenarioKey, 8 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,
SUM(SalesAmount)*(RAND()*0.2+0.95) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
FROM FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY a.CalendarMonth,a.EntityKey,a.ProductCategoryKey

---Generate data for different account.
---AdminCost
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 1 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(SalesAmount)*@AdminCost) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
FROM FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey

---ITCost
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 2 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(SalesAmount)*@ITCost) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
FROM FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey

---HR Cost
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 3 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(SalesAmount)*@HRCost) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
from FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey

---Energy Cost
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 4 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(SalesAmount)*@EnergyCost) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
FROM FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey

---Fixed Cost
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 5 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(SalesAmount)*@FixedCost) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
FROM FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey

---Variable Cost
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 6 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(SalesAmount)*@VariableCost) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
FROM FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey

---Ad Cost
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 7 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(SalesAmount)*@AdCost) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
FROM FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey

---Total Product Cost
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 9 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(a.TotalCost)) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
FROM FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey


---Spring / Back to Business Ad Cost
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 10 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(SalesAmount)*@SpringAdCost) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
FROM FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey

---Back-to-School Ad Cost
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 11 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(SalesAmount)*@BackSchool) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
from FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey

---Holiday Ad Cost
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 12 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(SalesAmount)*@HolidayAdCost) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
FROM FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey

---Cost of Goods Sold 
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 13 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(SalesAmount)*@CostofGoodsSold) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
FROM FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey

---Selling, General & Administrative Expenses  
INSERT FactStrategyPlan 
(
	Datekey,EntityKey,ScenarioKey,AccountKey,CurrencyKey,ProductCategoryKey,Amount,ETLLoadID,LoadDate,UpdateDate
) 
SELECT 
CONVERT(int,CAST(CalendarMonth as nvarchar(6))+'01') as DateKey,
EntityKey, 3 as Scenario, 14 as AccountKey,
1 as CurrencyKey , a.ProductCategoryKey as  ProductCategoryKey,Convert(decimal(10,2),SUM(SalesAmount)*@SellCost) as Amount,
1 AS ETLLoadID,GETDATE() AS LoadDate,GETDATE() AS UpdateDate
FROM 
(
SELECT a.DateKey as DateKey, a.StoreKey as StoreKey, TotalCost,SalesAmount,ReturnAmount,EntityKey,c.CalendarMonth as CalendarMonth, e.ProductCategoryKey as ProductCategoryKey
FROM FactSales a left join DimStore b
on a.StoreKey = b.StoreKey left join DimDate c
on a.DateKey = c.Datekey left join DimProduct d
on a.ProductKey = d.ProductKey left join DimProductSubcategory e
on d.ProductSubcategoryKey = e.ProductSubcategoryKey
) a
GROUP BY CalendarMonth,EntityKey,a.ProductCategoryKey

End
GO
PRINT N'Creating Extended Property [dbo].[V_Customer].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "C"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 241
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "S"
            Begin Extent = 
               Top = 6
               Left = 279
               Bottom = 95
               Right = 439
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_Customer';


GO
PRINT N'Creating Extended Property [dbo].[V_Customer].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_Customer';


GO
PRINT N'Creating Extended Property [dbo].[V_CustomerPromotion].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[42] 4[20] 2[28] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = -384
         Left = 0
      End
      Begin Tables = 
         Begin Table = "DimCustomer"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 319
               Right = 241
            End
            DisplayFlags = 280
            TopColumn = 11
         End
         Begin Table = "FactOnlineSales"
            Begin Extent = 
               Top = 6
               Left = 279
               Bottom = 311
               Right = 477
            End
            DisplayFlags = 280
            TopColumn = 1
         End
         Begin Table = "DimPromotion"
            Begin Extent = 
               Top = 6
               Left = 515
               Bottom = 250
               Right = 705
            End
            DisplayFlags = 280
            TopColumn = 2
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 2775
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_CustomerPromotion';


GO
PRINT N'Creating Extended Property [dbo].[V_CustomerPromotion].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_CustomerPromotion';


GO
PRINT N'Creating Extended Property [dbo].[V_OnlineSalesOrder].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "V_CustomerOrders"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 236
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_OnlineSalesOrder';


GO
PRINT N'Creating Extended Property [dbo].[V_OnlineSalesOrder].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_OnlineSalesOrder';


GO
PRINT N'Creating Extended Property [dbo].[V_OnlineSalesOrderDetail].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "V_CustomerOrders"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 125
               Right = 236
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_OnlineSalesOrderDetail';


GO
PRINT N'Creating Extended Property [dbo].[V_OnlineSalesOrderDetail].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 1, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_OnlineSalesOrderDetail';


GO
PRINT N'Creating Extended Property [dbo].[V_ProductForecast].[MS_DiagramPane1]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane1', @value = N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[28] 4[36] 2[17] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "S"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 65
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "P"
            Begin Extent = 
               Top = 6
               Left = 252
               Bottom = 65
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "SC"
            Begin Extent = 
               Top = 66
               Left = 38
               Bottom = 125
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "C"
            Begin Extent = 
               Top = 66
               Left = 252
               Bottom = 125
               Right = 428
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "D"
            Begin Extent = 
               Top = 126
               Left = 38
               Bottom = 185
               Right = 214
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 12
         Column = 1440
         Alias = 1575
         Table = 1170
         Output = ', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_ProductForecast';


GO
PRINT N'Creating Extended Property [dbo].[V_ProductForecast].[MS_DiagramPane2]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPane2', @value = N'720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_ProductForecast';


GO
PRINT N'Creating Extended Property [dbo].[V_ProductForecast].[MS_DiagramPaneCount]...';


GO
EXECUTE sp_addextendedproperty @name = N'MS_DiagramPaneCount', @value = 2, @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'VIEW', @level1name = N'V_ProductForecast';


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[DimCustomer] WITH CHECK CHECK CONSTRAINT [FK_DimCustomer_DimGeography];

ALTER TABLE [dbo].[DimEmployee] WITH CHECK CHECK CONSTRAINT [FK_DimEmployee_DimEmployee];

ALTER TABLE [dbo].[DimMachine] WITH CHECK CHECK CONSTRAINT [FK_DimMachine_DimStore];

ALTER TABLE [dbo].[DimProduct] WITH CHECK CHECK CONSTRAINT [FK_DimProduct_DimProductSubcategory];

ALTER TABLE [dbo].[DimProductSubcategory] WITH CHECK CHECK CONSTRAINT [FK_DimProductSubcategory_DimProductCategory];

ALTER TABLE [dbo].[DimSalesTerritory] WITH CHECK CHECK CONSTRAINT [FK_DimSalesTerritory_DimGeography];

ALTER TABLE [dbo].[DimStore] WITH CHECK CHECK CONSTRAINT [FK_DimStore_DimGeography];

ALTER TABLE [dbo].[FactExchangeRate] WITH CHECK CHECK CONSTRAINT [FK_FactExchangeRate_DimCurrency];

ALTER TABLE [dbo].[FactExchangeRate] WITH CHECK CHECK CONSTRAINT [FK_FactExchangeRate_DimDate];

ALTER TABLE [dbo].[FactInventory] WITH CHECK CHECK CONSTRAINT [FK_FactInventory_DimCurrency];

ALTER TABLE [dbo].[FactInventory] WITH CHECK CHECK CONSTRAINT [FK_FactInventory_DimDate];

ALTER TABLE [dbo].[FactInventory] WITH CHECK CHECK CONSTRAINT [FK_FactInventory_DimProduct];

ALTER TABLE [dbo].[FactInventory] WITH CHECK CHECK CONSTRAINT [FK_FactInventory_DimStore];

ALTER TABLE [dbo].[FactITMachine] WITH CHECK CHECK CONSTRAINT [FK_FactITMachine_DimDate];

ALTER TABLE [dbo].[FactITMachine] WITH CHECK CHECK CONSTRAINT [FK_FactITMachine_DimMachine];

ALTER TABLE [dbo].[FactITSLA] WITH CHECK CHECK CONSTRAINT [FK_FactITSLA_DimDate];

ALTER TABLE [dbo].[FactITSLA] WITH CHECK CHECK CONSTRAINT [FK_FactITSLA_DimMachine];

ALTER TABLE [dbo].[FactITSLA] WITH CHECK CHECK CONSTRAINT [FK_FactITSLA_DimOutage];

ALTER TABLE [dbo].[FactITSLA] WITH CHECK CHECK CONSTRAINT [FK_FactITSLA_DimStore];

ALTER TABLE [dbo].[FactOnlineSales] WITH CHECK CHECK CONSTRAINT [FK_FactOnlineSales_DimCurrency];

ALTER TABLE [dbo].[FactOnlineSales] WITH CHECK CHECK CONSTRAINT [FK_FactOnlineSales_DimCustomer];

ALTER TABLE [dbo].[FactOnlineSales] WITH CHECK CHECK CONSTRAINT [FK_FactOnlineSales_DimDate];

ALTER TABLE [dbo].[FactOnlineSales] WITH CHECK CHECK CONSTRAINT [FK_FactOnlineSales_DimProduct];

ALTER TABLE [dbo].[FactOnlineSales] WITH CHECK CHECK CONSTRAINT [FK_FactOnlineSales_DimPromotion];

ALTER TABLE [dbo].[FactOnlineSales] WITH CHECK CHECK CONSTRAINT [FK_FactOnlineSales_DimStore];

ALTER TABLE [dbo].[FactSales] WITH CHECK CHECK CONSTRAINT [FK_FactSales_DimChannel];

ALTER TABLE [dbo].[FactSales] WITH CHECK CHECK CONSTRAINT [FK_FactSales_DimCurrency];

ALTER TABLE [dbo].[FactSales] WITH CHECK CHECK CONSTRAINT [FK_FactSales_DimDate];

ALTER TABLE [dbo].[FactSales] WITH CHECK CHECK CONSTRAINT [FK_FactSales_DimProduct];

ALTER TABLE [dbo].[FactSales] WITH CHECK CHECK CONSTRAINT [FK_FactSales_DimPromotion];

ALTER TABLE [dbo].[FactSales] WITH CHECK CHECK CONSTRAINT [FK_FactSales_DimStore];

ALTER TABLE [dbo].[FactSalesQuota] WITH CHECK CHECK CONSTRAINT [FK_FactSalesQuota_DimChannel];

ALTER TABLE [dbo].[FactSalesQuota] WITH CHECK CHECK CONSTRAINT [FK_FactSalesQuota_DimCurrency];

ALTER TABLE [dbo].[FactSalesQuota] WITH CHECK CHECK CONSTRAINT [FK_FactSalesQuota_DimDate];

ALTER TABLE [dbo].[FactSalesQuota] WITH CHECK CHECK CONSTRAINT [FK_FactSalesQuota_DimProduct];

ALTER TABLE [dbo].[FactSalesQuota] WITH CHECK CHECK CONSTRAINT [FK_FactSalesQuota_DimScenario];

ALTER TABLE [dbo].[FactSalesQuota] WITH CHECK CHECK CONSTRAINT [FK_FactSalesQuota_DimStore];

ALTER TABLE [dbo].[FactStrategyPlan] WITH CHECK CHECK CONSTRAINT [FK_FactStrategyPlan_DimAccount];

ALTER TABLE [dbo].[FactStrategyPlan] WITH CHECK CHECK CONSTRAINT [FK_FactStrategyPlan_DimCurrency];

ALTER TABLE [dbo].[FactStrategyPlan] WITH CHECK CHECK CONSTRAINT [FK_FactStrategyPlan_DimDate];

ALTER TABLE [dbo].[FactStrategyPlan] WITH CHECK CHECK CONSTRAINT [FK_FactStrategyPlan_DimEntity];

ALTER TABLE [dbo].[FactStrategyPlan] WITH CHECK CHECK CONSTRAINT [FK_FactStrategyPlan_DimProductCategory];

ALTER TABLE [dbo].[FactStrategyPlan] WITH CHECK CHECK CONSTRAINT [FK_FactStrategyPlan_DimScenario];


GO
PRINT N'Update complete.';


GO
